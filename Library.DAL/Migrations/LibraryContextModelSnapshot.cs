// <auto-generated />
using System;
using Library.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.DAL.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorsBook", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("Author_ID");

                    b.Property<int>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("Book_ID");

                    b.HasKey("AuthorId", "BookId")
                        .HasName("PK__AuthorsB__099BC9E6BB727AB9");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorsBooks", (string)null);
                });

            modelBuilder.Entity("Library.DAL.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SecondName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Author__3214EC27372F52AD");

                    b.ToTable("Author", (string)null);
                });

            modelBuilder.Entity("Library.DAL.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Annum")
                        .HasColumnType("int");

                    b.Property<string>("CityOfPublishing")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("City_of_publishing");

                    b.Property<string>("PublisherCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PublishingCodeId")
                        .HasColumnType("int")
                        .HasColumnName("PublishingCode_ID");

                    b.Property<string>("PublishingCountry")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Publishing_country");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Book__3214EC273D98925B");

                    b.HasIndex("PublishingCodeId");

                    b.ToTable("Book", (string)null);
                });

            modelBuilder.Entity("Library.DAL.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Document__3214EC27368151B9");

                    b.ToTable("Document", (string)null);
                });

            modelBuilder.Entity("Library.DAL.Models.Librarian", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Libraria__3214EC27CACA2498");

                    b.ToTable("Librarian", (string)null);
                });

            modelBuilder.Entity("Library.DAL.Models.PublishingCode", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Publishi__3214EC2740A4C538");

                    b.ToTable("PublishingCode", (string)null);
                });

            modelBuilder.Entity("Library.DAL.Models.Reader", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int")
                        .HasColumnName("Document_ID");

                    b.Property<string>("DocumentNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Document_number");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Reader__3214EC27543D4597");

                    b.HasIndex("DocumentId");

                    b.ToTable("Reader", (string)null);
                });

            modelBuilder.Entity("AuthorsBook", b =>
                {
                    b.HasOne("Library.DAL.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .IsRequired()
                        .HasConstraintName("FK__AuthorsBo__Autho__44FF419A");

                    b.HasOne("Library.DAL.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BookId")
                        .IsRequired()
                        .HasConstraintName("FK__AuthorsBo__Book___45F365D3");
                });

            modelBuilder.Entity("Library.DAL.Models.Book", b =>
                {
                    b.HasOne("Library.DAL.Models.PublishingCode", "PublishingCode")
                        .WithMany("Books")
                        .HasForeignKey("PublishingCodeId")
                        .HasConstraintName("FK__Book__Publishing__3D5E1FD2");

                    b.Navigation("PublishingCode");
                });

            modelBuilder.Entity("Library.DAL.Models.Reader", b =>
                {
                    b.HasOne("Library.DAL.Models.Document", "Document")
                        .WithMany("Readers")
                        .HasForeignKey("DocumentId")
                        .HasConstraintName("FK__Reader__Document__4222D4EF");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("Library.DAL.Models.Document", b =>
                {
                    b.Navigation("Readers");
                });

            modelBuilder.Entity("Library.DAL.Models.PublishingCode", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
